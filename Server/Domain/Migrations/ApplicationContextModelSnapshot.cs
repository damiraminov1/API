// <auto-generated />
using System;
using Domain.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Domain.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Models.DB.DataInputModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Cgase")
                        .HasColumnType("float");

                    b.Property<double>("Cmaterial")
                        .HasColumnType("float");

                    b.Property<double>("Cwet")
                        .HasColumnType("float");

                    b.Property<double>("D")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Gt")
                        .HasColumnType("float");

                    b.Property<double>("Him")
                        .HasColumnType("float");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double>("L")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<double>("Wend")
                        .HasColumnType("float");

                    b.Property<double>("Wstart")
                        .HasColumnType("float");

                    b.Property<double>("alpha")
                        .HasColumnType("float");

                    b.Property<double>("enthalpy100")
                        .HasColumnType("float");

                    b.Property<double>("eta")
                        .HasColumnType("float");

                    b.Property<double>("k")
                        .HasColumnType("float");

                    b.Property<double>("percentAp")
                        .HasColumnType("float");

                    b.Property<double>("percentCp")
                        .HasColumnType("float");

                    b.Property<double>("percentHp")
                        .HasColumnType("float");

                    b.Property<double>("percentNp")
                        .HasColumnType("float");

                    b.Property<double>("percentOp")
                        .HasColumnType("float");

                    b.Property<double>("percentSp")
                        .HasColumnType("float");

                    b.Property<double>("percentWp")
                        .HasColumnType("float");

                    b.Property<double>("t1")
                        .HasColumnType("float");

                    b.Property<double>("t2")
                        .HasColumnType("float");

                    b.Property<double>("tair")
                        .HasColumnType("float");

                    b.Property<double>("tgase")
                        .HasColumnType("float");

                    b.Property<double>("tm1")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("DataInputs");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Cgase = 0.83499999999999996,
                            Cmaterial = 0.88,
                            Cwet = 4.1900000000000004,
                            D = 1.0,
                            Description = "Пример",
                            Gt = 1.75,
                            Him = 0.02,
                            IsActive = true,
                            L = 4.0,
                            Name = "Шаблонный вариант",
                            UserId = 0,
                            Wend = 0.5,
                            Wstart = 10.0,
                            alpha = 1.2,
                            enthalpy100 = 2675.0,
                            eta = 0.90000000000000002,
                            k = 3.7599999999999998,
                            percentAp = 0.29999999999999999,
                            percentCp = 86.599999999999994,
                            percentHp = 10.4,
                            percentNp = 0.59999999999999998,
                            percentOp = 0.40000000000000002,
                            percentSp = 0.90000000000000002,
                            percentWp = 0.80000000000000004,
                            t1 = 850.0,
                            t2 = 460.0,
                            tair = 20.0,
                            tgase = 20.0,
                            tm1 = 40.0
                        });
                });

            modelBuilder.Entity("Domain.Models.DB.RoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "user"
                        });
                });

            modelBuilder.Entity("Domain.Models.DB.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            Password = "admin",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Domain.Models.DB.UserModel", b =>
                {
                    b.HasOne("Domain.Models.DB.RoleModel", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Domain.Models.DB.RoleModel", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
